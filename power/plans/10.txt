BEGIN;
BEGIN
EXPLAIN
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1993-06-01'
	and o_orderdate < cast(date '1993-06-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14323316.61..14323316.66 rows=20 width=187)
   ->  Sort  (cost=14323316.61..14337514.78 rows=5679270 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1 - lineitem.l_discount)))) DESC
         ->  GroupAggregate  (cost=13959220.65..14172193.27 rows=5679270 width=187)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=13959220.65..13973418.82 rows=5679270 width=187)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=4559360.68..12797969.46 rows=5679270 width=187)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=4559359.12..12719877.94 rows=5679270 width=165)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Join  (cost=3535620.12..11129841.75 rows=5679270 width=20)
                                       Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Sort  (cost=3535619.51..3550012.14 rows=5757050 width=8)
                                             Sort Key: orders.o_orderkey
                                             ->  Bitmap Heap Scan on orders  (cost=122154.33..2889192.08 rows=5757050 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1993-06-01'::date) AND (o_orderdate < '1993-09-01'::date))
                                                   ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..120715.07 rows=5757050 width=0)
                                                         Index Cond: ((o_orderdate >= '1993-06-01'::date) AND (o_orderdate < '1993-09-01'::date))
                                       ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.57..7138710.70 rows=147973436 width=20)
                                 ->  Hash  (cost=513973.00..513973.00 rows=15000000 width=149)
                                       ->  Seq Scan on customer  (cost=0.00..513973.00 rows=15000000 width=149)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(24 rows)

COMMIT;
COMMIT
