BEGIN;
BEGIN
EXPLAIN
select
	l_shipmode,
	sum(case
		when o_orderpriority = '1-URGENT'
			or o_orderpriority = '2-HIGH'
			then 1
		else 0
	end) as high_line_count,
	sum(case
		when o_orderpriority <> '1-URGENT'
			and o_orderpriority <> '2-HIGH'
			then 1
		else 0
	end) as low_line_count
from
	orders,
	lineitem
where
	o_orderkey = l_orderkey
	and l_shipmode in ('RAIL', 'REG AIR')
	and l_commitdate < l_receiptdate
	and l_shipdate < l_commitdate
	and l_receiptdate >= date '1994-01-01'
	and l_receiptdate < date '1994-01-01' + interval '1 year'
group by
	l_shipmode
order by
	l_shipmode;
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=10920635.49..10920635.50 rows=1 width=27)
   Sort Key: lineitem.l_shipmode
   ->  HashAggregate  (cost=10920635.47..10920635.48 rows=1 width=27)
         Group Key: lineitem.l_shipmode
         ->  Merge Join  (cost=9.80..10870081.09 rows=2888822 width=27)
               Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using pk_orders on orders  (cost=0.57..6575841.57 rows=150000000 width=20)
               ->  Index Scan using lineitem_l_orderkey_idx_part2 on lineitem  (cost=0.57..3883130.31 rows=2888822 width=15)
                     Filter: ((l_shipmode = ANY ('{RAIL,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
(9 rows)

COMMIT;
COMMIT
